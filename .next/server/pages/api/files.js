"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/files";
exports.ids = ["pages/api/files"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "node-telegram-bot-api":
/*!****************************************!*\
  !*** external "node-telegram-bot-api" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("node-telegram-bot-api");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "@upstash/redis":
/*!*********************************!*\
  !*** external "@upstash/redis" ***!
  \*********************************/
/***/ ((module) => {

module.exports = import("@upstash/redis");;

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "formidable":
/*!*****************************!*\
  !*** external "formidable" ***!
  \*****************************/
/***/ ((module) => {

module.exports = import("formidable");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ffiles&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cfiles.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ffiles&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cfiles.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_files_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\files.js */ \"(api)/./pages/api/files.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_files_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_files_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_files_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_files_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/files\",\n        pathname: \"/api/files\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_files_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmZpbGVzJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlNUNhcGklNUNmaWxlcy5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUNtRDtBQUNuRDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsZ0RBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLGdEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RnLW5ldC1idWNrZXQvPzY5YmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzXFxcXGFwaVxcXFxmaWxlcy5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2ZpbGVzXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvZmlsZXNcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ffiles&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cfiles.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/files.js":
/*!****************************!*\
  !*** ./pages/api/files.js ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _src_telegram_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../src/telegram_storage */ \"(api)/./src/telegram_storage.js\");\n/* harmony import */ var formidable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! formidable */ \"formidable\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_telegram_storage__WEBPACK_IMPORTED_MODULE_0__, formidable__WEBPACK_IMPORTED_MODULE_1__]);\n([_src_telegram_storage__WEBPACK_IMPORTED_MODULE_0__, formidable__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n// 禁用Next.js的默认body解析，以便处理文件上传\nconst config = {\n    api: {\n        bodyParser: false\n    }\n};\n/**\n * 验证环境变量是否配置正确\n * @returns {Object} 验证结果\n */ function validateEnvironmentVariables() {\n    const botToken = process.env.TELEGRAM_BOT_TOKEN;\n    const chatId = process.env.TELEGRAM_CHAT_ID;\n    if (!botToken) {\n        return {\n            valid: false,\n            error: \"缺少环境变量 TELEGRAM_BOT_TOKEN\"\n        };\n    }\n    if (!chatId) {\n        return {\n            valid: false,\n            error: \"缺少环境变量 TELEGRAM_CHAT_ID\"\n        };\n    }\n    return {\n        valid: true,\n        botToken,\n        chatId\n    };\n}\nasync function handler(req, res) {\n    const { method } = req;\n    // 验证环境变量\n    const envValidation = validateEnvironmentVariables();\n    if (!envValidation.valid) {\n        return res.status(500).json({\n            success: false,\n            error: `配置错误: ${envValidation.error}`\n        });\n    }\n    // 创建TelegramStorage实例\n    const telegramStorage = new _src_telegram_storage__WEBPACK_IMPORTED_MODULE_0__.TelegramStorage({\n        botToken: envValidation.botToken,\n        chatId: envValidation.chatId\n    });\n    switch(method){\n        case \"GET\":\n            // 获取文件列表\n            try {\n                const files = await telegramStorage.listFiles();\n                res.status(200).json({\n                    success: true,\n                    files\n                });\n            } catch (error) {\n                res.status(500).json({\n                    success: false,\n                    error: error.message\n                });\n            }\n            break;\n        case \"POST\":\n            // 上传文件\n            try {\n                const form = new formidable__WEBPACK_IMPORTED_MODULE_1__.IncomingForm();\n                form.parse(req, async (err, fields, files)=>{\n                    if (err) {\n                        console.error(\"文件解析错误:\", err);\n                        return res.status(500).json({\n                            success: false,\n                            error: `文件解析失败: ${err.message}`\n                        });\n                    }\n                    // 在formidable v3中，files.file是一个数组\n                    const fileArray = files.file;\n                    if (!fileArray || !Array.isArray(fileArray) || fileArray.length === 0) {\n                        console.error(\"没有提供文件\");\n                        return res.status(400).json({\n                            success: false,\n                            error: \"没有提供文件\"\n                        });\n                    }\n                    const file = fileArray[0]; // 获取第一个文件\n                    if (!file || !file.filepath) {\n                        console.error(\"文件对象无效或缺少文件路径\");\n                        return res.status(400).json({\n                            success: false,\n                            error: \"文件对象无效或缺少文件路径\"\n                        });\n                    }\n                    try {\n                        console.log(`开始上传文件: ${file.originalFilename}, 大小: ${file.size} bytes`);\n                        const fileBuffer = fs__WEBPACK_IMPORTED_MODULE_2___default().readFileSync(file.filepath);\n                        const result = await telegramStorage.uploadFile(fileBuffer, file.originalFilename);\n                        console.log(`文件上传成功: ${file.originalFilename}, fileId: ${result.fileId}`);\n                        res.status(200).json({\n                            success: true,\n                            fileId: result.fileId,\n                            messageId: result.messageId\n                        });\n                    } catch (uploadError) {\n                        console.error(\"文件上传到Telegram失败:\", uploadError);\n                        return res.status(500).json({\n                            success: false,\n                            error: `上传失败: ${uploadError.message}`\n                        });\n                    }\n                });\n            } catch (error) {\n                console.error(\"POST请求处理错误:\", error);\n                res.status(500).json({\n                    success: false,\n                    error: `请求处理失败: ${error.message}`\n                });\n            }\n            break;\n        case \"DELETE\":\n            // 删除文件\n            try {\n                const { messageId } = req.query;\n                if (!messageId) {\n                    return res.status(400).json({\n                        success: false,\n                        error: \"没有提供消息ID\"\n                    });\n                }\n                const result = await telegramStorage.deleteFile(messageId);\n                res.status(200).json({\n                    success: true,\n                    result\n                });\n            } catch (error) {\n                res.status(500).json({\n                    success: false,\n                    error: error.message\n                });\n            }\n            break;\n        default:\n            res.setHeader(\"Allow\", [\n                \"GET\",\n                \"POST\",\n                \"DELETE\"\n            ]);\n            res.status(405).end(`Method ${method} Not Allowed`);\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/files.js\n");

/***/ }),

/***/ "(api)/./src/redis_client.js":
/*!*****************************!*\
  !*** ./src/redis_client.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RedisClient: () => (/* binding */ RedisClient),\n/* harmony export */   redisClient: () => (/* binding */ redisClient)\n/* harmony export */ });\n/* harmony import */ var _upstash_redis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @upstash/redis */ \"@upstash/redis\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_upstash_redis__WEBPACK_IMPORTED_MODULE_0__]);\n_upstash_redis__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n/**\r\n * Redis客户端配置和连接管理\r\n * 使用Upstash Redis作为持久化存储\r\n */ class RedisClient {\n    constructor(){\n        // 从环境变量获取Upstash Redis配置\n        this.redisUrl = process.env.UPSTASH_REDIS_REST_URL;\n        this.redisToken = process.env.UPSTASH_REDIS_REST_TOKEN;\n        if (!this.redisUrl || !this.redisToken) {\n            console.warn(\"Upstash Redis配置未找到，将使用内存存储（仅用于开发环境）\");\n            this.redis = null;\n            this.memoryStore = new Map(); // 开发环境的内存存储\n        } else {\n            // 初始化Upstash Redis客户端\n            this.redis = new _upstash_redis__WEBPACK_IMPORTED_MODULE_0__.Redis({\n                url: this.redisUrl,\n                token: this.redisToken\n            });\n        }\n    }\n    /**\r\n   * 获取Redis客户端实例\r\n   * @returns {Redis|null} Redis客户端实例或null（如果未配置）\r\n   */ getClient() {\n        return this.redis;\n    }\n    /**\r\n   * 检查Redis连接是否可用\r\n   * @returns {boolean} 连接状态\r\n   */ isConnected() {\n        return this.redis !== null;\n    }\n    /**\r\n   * 设置键值对\r\n   * @param {string} key - 键\r\n   * @param {any} value - 值\r\n   * @param {number} [ttl] - 过期时间（秒）\r\n   * @returns {Promise<boolean>} 操作结果\r\n   */ async set(key, value, ttl = null) {\n        try {\n            if (this.redis) {\n                const serializedValue = JSON.stringify(value);\n                if (ttl) {\n                    await this.redis.setex(key, ttl, serializedValue);\n                } else {\n                    await this.redis.set(key, serializedValue);\n                }\n                return true;\n            } else {\n                // 使用内存存储作为后备\n                this.memoryStore.set(key, {\n                    value,\n                    timestamp: Date.now(),\n                    ttl\n                });\n                return true;\n            }\n        } catch (error) {\n            console.error(\"Redis设置失败:\", error);\n            return false;\n        }\n    }\n    /**\r\n   * 获取值\r\n   * @param {string} key - 键\r\n   * @returns {Promise<any|null>} 值或null\r\n   */ async get(key) {\n        try {\n            if (this.redis) {\n                const value = await this.redis.get(key);\n                return value ? JSON.parse(value) : null;\n            } else {\n                // 使用内存存储作为后备\n                const item = this.memoryStore.get(key);\n                if (!item) return null;\n                // 检查是否过期\n                if (item.ttl && Date.now() - item.timestamp > item.ttl * 1000) {\n                    this.memoryStore.delete(key);\n                    return null;\n                }\n                return item.value;\n            }\n        } catch (error) {\n            console.error(\"Redis获取失败:\", error);\n            return null;\n        }\n    }\n    /**\r\n   * 删除键\r\n   * @param {string} key - 键\r\n   * @returns {Promise<boolean>} 操作结果\r\n   */ async del(key) {\n        try {\n            if (this.redis) {\n                await this.redis.del(key);\n                return true;\n            } else {\n                // 使用内存存储作为后备\n                return this.memoryStore.delete(key);\n            }\n        } catch (error) {\n            console.error(\"Redis删除失败:\", error);\n            return false;\n        }\n    }\n    /**\r\n   * 向列表添加元素\r\n   * @param {string} key - 列表键\r\n   * @param {any} value - 要添加的值\r\n   * @returns {Promise<boolean>} 操作结果\r\n   */ async lpush(key, value) {\n        try {\n            if (this.redis) {\n                await this.redis.lpush(key, JSON.stringify(value));\n                return true;\n            } else {\n                // 使用内存存储作为后备\n                const list = this.memoryStore.get(key)?.value || [];\n                list.unshift(value);\n                this.memoryStore.set(key, {\n                    value: list,\n                    timestamp: Date.now()\n                });\n                return true;\n            }\n        } catch (error) {\n            console.error(\"Redis列表添加失败:\", error);\n            return false;\n        }\n    }\n    /**\r\n   * 获取列表所有元素\r\n   * @param {string} key - 列表键\r\n   * @returns {Promise<Array>} 列表元素\r\n   */ async lrange(key, start = 0, end = -1) {\n        try {\n            if (this.redis) {\n                const items = await this.redis.lrange(key, start, end);\n                return items.map((item)=>JSON.parse(item));\n            } else {\n                // 使用内存存储作为后备\n                const list = this.memoryStore.get(key)?.value || [];\n                if (end === -1) end = list.length - 1;\n                return list.slice(start, end + 1);\n            }\n        } catch (error) {\n            console.error(\"Redis列表获取失败:\", error);\n            return [];\n        }\n    }\n    /**\r\n   * 从列表中移除元素\r\n   * @param {string} key - 列表键\r\n   * @param {any} value - 要移除的值\r\n   * @returns {Promise<boolean>} 操作结果\r\n   */ async lrem(key, value) {\n        try {\n            if (this.redis) {\n                await this.redis.lrem(key, 0, JSON.stringify(value));\n                return true;\n            } else {\n                // 使用内存存储作为后备\n                const list = this.memoryStore.get(key)?.value || [];\n                const index = list.findIndex((item)=>JSON.stringify(item) === JSON.stringify(value));\n                if (index !== -1) {\n                    list.splice(index, 1);\n                    this.memoryStore.set(key, {\n                        value: list,\n                        timestamp: Date.now()\n                    });\n                }\n                return true;\n            }\n        } catch (error) {\n            console.error(\"Redis列表移除失败:\", error);\n            return false;\n        }\n    }\n}\n// 创建单例实例\nconst redisClient = new RedisClient();\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/redis_client.js\n");

/***/ }),

/***/ "(api)/./src/telegram_storage.js":
/*!*********************************!*\
  !*** ./src/telegram_storage.js ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TelegramStorage: () => (/* binding */ TelegramStorage)\n/* harmony export */ });\n/* harmony import */ var node_telegram_bot_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-telegram-bot-api */ \"node-telegram-bot-api\");\n/* harmony import */ var node_telegram_bot_api__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(node_telegram_bot_api__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var _redis_client_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./redis_client.js */ \"(api)/./src/redis_client.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_1__, _redis_client_js__WEBPACK_IMPORTED_MODULE_2__]);\n([axios__WEBPACK_IMPORTED_MODULE_1__, _redis_client_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nclass TelegramStorage {\n    constructor(options){\n        this.botToken = options.botToken;\n        this.chatId = options.chatId;\n        // 允许注入客户端用于测试\n        this.telegramClient = options.telegramClient || new (node_telegram_bot_api__WEBPACK_IMPORTED_MODULE_0___default())(this.botToken, {\n            polling: false\n        });\n    }\n    /**\n   * 上传文件到Telegram\n   * @param {Buffer} fileBuffer - 文件内容的Buffer\n   * @param {string} fileName - 文件名\n   * @returns {Promise<{fileId: string, messageId: string}>} - 上传结果\n   */ async uploadFile(fileBuffer, fileName) {\n        try {\n            const response = await this.telegramClient.sendDocument(this.chatId, fileBuffer, {\n                filename: fileName\n            });\n            const fileInfo = {\n                fileId: response.document?.file_id || \"\",\n                messageId: response.message_id.toString(),\n                fileName: fileName,\n                fileSize: response.document?.file_size || fileBuffer.length,\n                uploadTime: new Date().toISOString(),\n                chatId: this.chatId\n            };\n            // 将文件信息存储到Redis中\n            const fileListKey = `files:${this.chatId}`;\n            await _redis_client_js__WEBPACK_IMPORTED_MODULE_2__.redisClient.lpush(fileListKey, fileInfo);\n            // 设置文件信息的单独键，方便快速查找\n            const fileKey = `file:${fileInfo.fileId}`;\n            await _redis_client_js__WEBPACK_IMPORTED_MODULE_2__.redisClient.set(fileKey, fileInfo, 86400 * 30); // 30天过期\n            return {\n                fileId: fileInfo.fileId,\n                messageId: fileInfo.messageId\n            };\n        } catch (error) {\n            console.error(\"上传文件到Telegram失败:\", error);\n            throw new Error(`上传文件失败: ${error.message}`);\n        }\n    }\n    /**\n   * 从Telegram下载文件\n   * @param {string} fileId - 文件ID\n   * @returns {Promise<string>} - 文件下载链接\n   */ async downloadFile(fileId) {\n        try {\n            const file = await this.telegramClient.getFile(fileId);\n            const fileLink = await this.telegramClient.getFileLink(file.file_id);\n            return fileLink;\n        } catch (error) {\n            console.error(\"从Telegram下载文件失败:\", error);\n            throw new Error(`下载文件失败: ${error.message}`);\n        }\n    }\n    /**\n   * 列出文件列表\n   * 优先从Redis获取，如果Redis为空则从Telegram同步\n   * @returns {Promise<Array<{fileId: string, fileName: string, messageId: string}>>} - 文件列表\n   */ async listFiles() {\n        try {\n            const fileListKey = `files:${this.chatId}`;\n            // 首先尝试从Redis获取文件列表\n            let files = await _redis_client_js__WEBPACK_IMPORTED_MODULE_2__.redisClient.lrange(fileListKey);\n            // 如果Redis中没有数据，从Telegram同步\n            if (!files || files.length === 0) {\n                console.log(\"Redis中无文件列表，从Telegram同步...\");\n                files = await this.syncFilesFromTelegram();\n            }\n            // 按上传时间倒序排列（最新的在前面）\n            files.sort((a, b)=>new Date(b.uploadTime) - new Date(a.uploadTime));\n            return files;\n        } catch (error) {\n            console.error(\"列出文件失败:\", error);\n            throw new Error(`列出文件失败: ${error.message}`);\n        }\n    }\n    /**\n   * 从Telegram同步文件列表到Redis\n   * @returns {Promise<Array>} 同步的文件列表\n   */ async syncFilesFromTelegram() {\n        try {\n            // 使用getUpdates获取最近的消息（包含文档的消息）\n            const updates = await this.telegramClient.getUpdates({\n                limit: 100,\n                allowed_updates: [\n                    \"message\"\n                ] // 只获取消息更新\n            });\n            const files = [];\n            const fileListKey = `files:${this.chatId}`;\n            // 遍历更新，查找包含文档的消息\n            for (const update of updates){\n                if (update.message && update.message.chat.id.toString() === this.chatId.toString() && update.message.document) {\n                    const doc = update.message.document;\n                    const fileInfo = {\n                        fileId: doc.file_id,\n                        fileName: doc.file_name || `document_${doc.file_id.slice(-8)}`,\n                        messageId: update.message.message_id.toString(),\n                        fileSize: doc.file_size,\n                        uploadTime: new Date(update.message.date * 1000).toISOString(),\n                        chatId: this.chatId\n                    };\n                    files.push(fileInfo);\n                    // 将文件信息存储到Redis\n                    await _redis_client_js__WEBPACK_IMPORTED_MODULE_2__.redisClient.lpush(fileListKey, fileInfo);\n                    // 设置文件信息的单独键\n                    const fileKey = `file:${fileInfo.fileId}`;\n                    await _redis_client_js__WEBPACK_IMPORTED_MODULE_2__.redisClient.set(fileKey, fileInfo, 86400 * 30); // 30天过期\n                }\n            }\n            console.log(`从Telegram同步了 ${files.length} 个文件到Redis`);\n            return files;\n        } catch (error) {\n            console.error(\"从Telegram同步文件失败:\", error);\n            return [];\n        }\n    }\n    /**\n   * 从Telegram删除文件\n   * @param {string} messageId - 消息ID\n   * @returns {Promise<boolean>} - 删除结果\n   */ async deleteFile(messageId) {\n        try {\n            // 从Telegram删除消息\n            await this.telegramClient.deleteMessage(this.chatId, messageId);\n            // 从Redis中删除文件信息\n            const fileListKey = `files:${this.chatId}`;\n            const files = await _redis_client_js__WEBPACK_IMPORTED_MODULE_2__.redisClient.lrange(fileListKey);\n            // 找到要删除的文件\n            const fileToDelete = files.find((file)=>file.messageId === messageId);\n            if (fileToDelete) {\n                // 从文件列表中移除\n                await _redis_client_js__WEBPACK_IMPORTED_MODULE_2__.redisClient.lrem(fileListKey, fileToDelete);\n                // 删除文件的单独键\n                const fileKey = `file:${fileToDelete.fileId}`;\n                await _redis_client_js__WEBPACK_IMPORTED_MODULE_2__.redisClient.del(fileKey);\n                console.log(`已从Redis删除文件: ${fileToDelete.fileName}`);\n            }\n            return true;\n        } catch (error) {\n            console.error(\"从Telegram删除文件失败:\", error);\n            throw new Error(`删除文件失败: ${error.message}`);\n        }\n    }\n}\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/telegram_storage.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ffiles&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cfiles.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();