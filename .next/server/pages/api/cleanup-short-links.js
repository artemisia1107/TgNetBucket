"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/cleanup-short-links";
exports.ids = ["pages/api/cleanup-short-links"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "@upstash/redis":
/*!*********************************!*\
  !*** external "@upstash/redis" ***!
  \*********************************/
/***/ ((module) => {

module.exports = import("@upstash/redis");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcleanup-short-links&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Ccleanup-short-links.js&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcleanup-short-links&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Ccleanup-short-links.js&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_cleanup_short_links_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\cleanup-short-links.js */ \"(api)/./pages/api/cleanup-short-links.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_cleanup_short_links_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_cleanup_short_links_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_cleanup_short_links_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_cleanup_short_links_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/cleanup-short-links\",\n        pathname: \"/api/cleanup-short-links\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_cleanup_short_links_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmNsZWFudXAtc2hvcnQtbGlua3MmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyU1Q2FwaSU1Q2NsZWFudXAtc2hvcnQtbGlua3MuanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDaUU7QUFDakU7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLDhEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyw4REFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90Zy1uZXQtYnVja2V0Lz9iYTExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlc1xcXFxhcGlcXFxcY2xlYW51cC1zaG9ydC1saW5rcy5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2NsZWFudXAtc2hvcnQtbGlua3NcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jbGVhbnVwLXNob3J0LWxpbmtzXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcleanup-short-links&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Ccleanup-short-links.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/cleanup-short-links.js":
/*!******************************************!*\
  !*** ./pages/api/cleanup-short-links.js ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _src_redis_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../src/redis_client */ \"(api)/./src/redis_client.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_redis_client__WEBPACK_IMPORTED_MODULE_0__]);\n_src_redis_client__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n/**\n * 清理旧的短链接数据API\n * 删除所有 short:* 格式的旧短链接键，释放数据库空间\n */ async function handler(req, res) {\n    const { method } = req;\n    if (method !== \"POST\") {\n        res.setHeader(\"Allow\", [\n            \"POST\"\n        ]);\n        return res.status(405).end(`Method ${method} Not Allowed`);\n    }\n    try {\n        let deletedCount = 0;\n        let scannedCount = 0;\n        // 如果使用的是内存存储（开发环境）\n        if (!_src_redis_client__WEBPACK_IMPORTED_MODULE_0__.redisClient.isConnected()) {\n            // 清理内存存储中的短链接\n            const memoryStore = _src_redis_client__WEBPACK_IMPORTED_MODULE_0__.redisClient.memoryStore;\n            if (memoryStore) {\n                for (const [key] of memoryStore){\n                    scannedCount++;\n                    if (key.startsWith(\"short:\")) {\n                        memoryStore.delete(key);\n                        deletedCount++;\n                    }\n                }\n            }\n            console.log(`内存存储清理完成: 扫描 ${scannedCount} 个键，删除 ${deletedCount} 个短链接`);\n            return res.status(200).json({\n                success: true,\n                message: \"清理完成（内存存储）\",\n                scannedCount,\n                deletedCount,\n                environment: \"development\"\n            });\n        }\n        // 如果使用的是 Redis\n        const redis = _src_redis_client__WEBPACK_IMPORTED_MODULE_0__.redisClient.getClient();\n        if (!redis) {\n            return res.status(500).json({\n                success: false,\n                error: \"Redis 客户端未初始化\"\n            });\n        }\n        // 使用 SCAN 命令查找所有 short:* 键\n        let cursor = 0;\n        const keysToDelete = [];\n        do {\n            try {\n                // 注意：Upstash Redis 的 scan 方法可能有不同的参数格式\n                const result = await redis.scan(cursor, {\n                    match: \"short:*\",\n                    count: 100\n                });\n                if (Array.isArray(result) && result.length >= 2) {\n                    cursor = parseInt(result[0]);\n                    const keys = result[1];\n                    if (Array.isArray(keys)) {\n                        keysToDelete.push(...keys);\n                        scannedCount += keys.length;\n                    }\n                } else {\n                    break;\n                }\n            } catch (scanError) {\n                console.error(\"SCAN 命令执行失败:\", scanError);\n                // 如果 SCAN 不支持，尝试使用 KEYS（注意：KEYS 在生产环境中性能较差）\n                try {\n                    const keys = await redis.keys(\"short:*\");\n                    if (Array.isArray(keys)) {\n                        keysToDelete.push(...keys);\n                        scannedCount += keys.length;\n                    }\n                } catch (keysError) {\n                    console.error(\"KEYS 命令也失败:\", keysError);\n                    return res.status(500).json({\n                        success: false,\n                        error: \"无法扫描短链接键\"\n                    });\n                }\n                break;\n            }\n        }while (cursor !== 0);\n        // 批量删除找到的键\n        if (keysToDelete.length > 0) {\n            try {\n                // 分批删除，避免一次删除太多\n                const batchSize = 50;\n                for(let i = 0; i < keysToDelete.length; i += batchSize){\n                    const batch = keysToDelete.slice(i, i + batchSize);\n                    await redis.del(...batch);\n                    deletedCount += batch.length;\n                }\n            } catch (deleteError) {\n                console.error(\"批量删除失败:\", deleteError);\n                // 尝试逐个删除\n                for (const key of keysToDelete){\n                    try {\n                        await redis.del(key);\n                        deletedCount++;\n                    } catch (singleDeleteError) {\n                        console.error(`删除键 ${key} 失败:`, singleDeleteError);\n                    }\n                }\n            }\n        }\n        console.log(`Redis 清理完成: 扫描 ${scannedCount} 个短链接键，删除 ${deletedCount} 个`);\n        res.status(200).json({\n            success: true,\n            message: \"清理完成\",\n            scannedCount,\n            deletedCount,\n            environment: \"production\"\n        });\n    } catch (error) {\n        console.error(\"清理短链接数据失败:\", error);\n        res.status(500).json({\n            success: false,\n            error: `清理失败: ${error.message}`\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvY2xlYW51cC1zaG9ydC1saW5rcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxRDtBQUVyRDs7O0NBR0MsR0FDYyxlQUFlQyxRQUFRQyxHQUFHLEVBQUVDLEdBQUc7SUFDNUMsTUFBTSxFQUFFQyxNQUFNLEVBQUUsR0FBR0Y7SUFFbkIsSUFBSUUsV0FBVyxRQUFRO1FBQ3JCRCxJQUFJRSxTQUFTLENBQUMsU0FBUztZQUFDO1NBQU87UUFDL0IsT0FBT0YsSUFBSUcsTUFBTSxDQUFDLEtBQUtDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sRUFBRUgsT0FBTyxZQUFZLENBQUM7SUFDM0Q7SUFFQSxJQUFJO1FBQ0YsSUFBSUksZUFBZTtRQUNuQixJQUFJQyxlQUFlO1FBRW5CLG1CQUFtQjtRQUNuQixJQUFJLENBQUNULDBEQUFXQSxDQUFDVSxXQUFXLElBQUk7WUFDOUIsY0FBYztZQUNkLE1BQU1DLGNBQWNYLDBEQUFXQSxDQUFDVyxXQUFXO1lBQzNDLElBQUlBLGFBQWE7Z0JBQ2YsS0FBSyxNQUFNLENBQUNDLElBQUksSUFBSUQsWUFBYTtvQkFDL0JGO29CQUNBLElBQUlHLElBQUlDLFVBQVUsQ0FBQyxXQUFXO3dCQUM1QkYsWUFBWUcsTUFBTSxDQUFDRjt3QkFDbkJKO29CQUNGO2dCQUNGO1lBQ0Y7WUFFQU8sUUFBUUMsR0FBRyxDQUFDLENBQUMsYUFBYSxFQUFFUCxhQUFhLE9BQU8sRUFBRUQsYUFBYSxLQUFLLENBQUM7WUFFckUsT0FBT0wsSUFBSUcsTUFBTSxDQUFDLEtBQUtXLElBQUksQ0FBQztnQkFDMUJDLFNBQVM7Z0JBQ1RDLFNBQVM7Z0JBQ1RWO2dCQUNBRDtnQkFDQVksYUFBYTtZQUNmO1FBQ0Y7UUFFQSxlQUFlO1FBQ2YsTUFBTUMsUUFBUXJCLDBEQUFXQSxDQUFDc0IsU0FBUztRQUNuQyxJQUFJLENBQUNELE9BQU87WUFDVixPQUFPbEIsSUFBSUcsTUFBTSxDQUFDLEtBQUtXLElBQUksQ0FBQztnQkFDMUJDLFNBQVM7Z0JBQ1RLLE9BQU87WUFDVDtRQUNGO1FBRUEsMkJBQTJCO1FBQzNCLElBQUlDLFNBQVM7UUFDYixNQUFNQyxlQUFlLEVBQUU7UUFFdkIsR0FBRztZQUNELElBQUk7Z0JBQ0YsdUNBQXVDO2dCQUN2QyxNQUFNQyxTQUFTLE1BQU1MLE1BQU1NLElBQUksQ0FBQ0gsUUFBUTtvQkFBRUksT0FBTztvQkFBV0MsT0FBTztnQkFBSTtnQkFFdkUsSUFBSUMsTUFBTUMsT0FBTyxDQUFDTCxXQUFXQSxPQUFPTSxNQUFNLElBQUksR0FBRztvQkFDL0NSLFNBQVNTLFNBQVNQLE1BQU0sQ0FBQyxFQUFFO29CQUMzQixNQUFNUSxPQUFPUixNQUFNLENBQUMsRUFBRTtvQkFFdEIsSUFBSUksTUFBTUMsT0FBTyxDQUFDRyxPQUFPO3dCQUN2QlQsYUFBYVUsSUFBSSxJQUFJRDt3QkFDckJ6QixnQkFBZ0J5QixLQUFLRixNQUFNO29CQUM3QjtnQkFDRixPQUFPO29CQUVMO2dCQUNGO1lBQ0YsRUFBRSxPQUFPSSxXQUFXO2dCQUNsQnJCLFFBQVFRLEtBQUssQ0FBQyxnQkFBZ0JhO2dCQUM5Qiw0Q0FBNEM7Z0JBQzVDLElBQUk7b0JBQ0YsTUFBTUYsT0FBTyxNQUFNYixNQUFNYSxJQUFJLENBQUM7b0JBQzlCLElBQUlKLE1BQU1DLE9BQU8sQ0FBQ0csT0FBTzt3QkFDdkJULGFBQWFVLElBQUksSUFBSUQ7d0JBQ3JCekIsZ0JBQWdCeUIsS0FBS0YsTUFBTTtvQkFDN0I7Z0JBQ0YsRUFBRSxPQUFPSyxXQUFXO29CQUNsQnRCLFFBQVFRLEtBQUssQ0FBQyxlQUFlYztvQkFDN0IsT0FBT2xDLElBQUlHLE1BQU0sQ0FBQyxLQUFLVyxJQUFJLENBQUM7d0JBQzFCQyxTQUFTO3dCQUNUSyxPQUFPO29CQUNUO2dCQUNGO2dCQUNBO1lBQ0Y7UUFDRixRQUFTQyxXQUFXLEdBQUc7UUFFdkIsV0FBVztRQUNYLElBQUlDLGFBQWFPLE1BQU0sR0FBRyxHQUFHO1lBQzNCLElBQUk7Z0JBQ0YsZ0JBQWdCO2dCQUNoQixNQUFNTSxZQUFZO2dCQUNsQixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSWQsYUFBYU8sTUFBTSxFQUFFTyxLQUFLRCxVQUFXO29CQUN2RCxNQUFNRSxRQUFRZixhQUFhZ0IsS0FBSyxDQUFDRixHQUFHQSxJQUFJRDtvQkFDeEMsTUFBTWpCLE1BQU1xQixHQUFHLElBQUlGO29CQUNuQmhDLGdCQUFnQmdDLE1BQU1SLE1BQU07Z0JBQzlCO1lBQ0YsRUFBRSxPQUFPVyxhQUFhO2dCQUNwQjVCLFFBQVFRLEtBQUssQ0FBQyxXQUFXb0I7Z0JBQ3pCLFNBQVM7Z0JBQ1QsS0FBSyxNQUFNL0IsT0FBT2EsYUFBYztvQkFDOUIsSUFBSTt3QkFDRixNQUFNSixNQUFNcUIsR0FBRyxDQUFDOUI7d0JBQ2hCSjtvQkFDRixFQUFFLE9BQU9vQyxtQkFBbUI7d0JBQzFCN0IsUUFBUVEsS0FBSyxDQUFDLENBQUMsSUFBSSxFQUFFWCxJQUFJLElBQUksQ0FBQyxFQUFFZ0M7b0JBQ2xDO2dCQUNGO1lBQ0Y7UUFDRjtRQUVBN0IsUUFBUUMsR0FBRyxDQUFDLENBQUMsZUFBZSxFQUFFUCxhQUFhLFVBQVUsRUFBRUQsYUFBYSxFQUFFLENBQUM7UUFFdkVMLElBQUlHLE1BQU0sQ0FBQyxLQUFLVyxJQUFJLENBQUM7WUFDbkJDLFNBQVM7WUFDVEMsU0FBUztZQUNUVjtZQUNBRDtZQUNBWSxhQUFhO1FBQ2Y7SUFFRixFQUFFLE9BQU9HLE9BQU87UUFDZFIsUUFBUVEsS0FBSyxDQUFDLGNBQWNBO1FBQzVCcEIsSUFBSUcsTUFBTSxDQUFDLEtBQUtXLElBQUksQ0FBQztZQUNuQkMsU0FBUztZQUNUSyxPQUFPLENBQUMsTUFBTSxFQUFFQSxNQUFNSixPQUFPLENBQUMsQ0FBQztRQUNqQztJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90Zy1uZXQtYnVja2V0Ly4vcGFnZXMvYXBpL2NsZWFudXAtc2hvcnQtbGlua3MuanM/NjljNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZWRpc0NsaWVudCB9IGZyb20gJy4uLy4uL3NyYy9yZWRpc19jbGllbnQnO1xuXG4vKipcbiAqIOa4heeQhuaXp+eahOefremTvuaOpeaVsOaNrkFQSVxuICog5Yig6Zmk5omA5pyJIHNob3J0Oiog5qC85byP55qE5pen55+t6ZO+5o6l6ZSu77yM6YeK5pS+5pWw5o2u5bqT56m66Ze0XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcbiAgY29uc3QgeyBtZXRob2QgfSA9IHJlcTtcblxuICBpZiAobWV0aG9kICE9PSAnUE9TVCcpIHtcbiAgICByZXMuc2V0SGVhZGVyKCdBbGxvdycsIFsnUE9TVCddKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDUpLmVuZChgTWV0aG9kICR7bWV0aG9kfSBOb3QgQWxsb3dlZGApO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBsZXQgZGVsZXRlZENvdW50ID0gMDtcbiAgICBsZXQgc2Nhbm5lZENvdW50ID0gMDtcbiAgICBcbiAgICAvLyDlpoLmnpzkvb/nlKjnmoTmmK/lhoXlrZjlrZjlgqjvvIjlvIDlj5Hnjq/looPvvIlcbiAgICBpZiAoIXJlZGlzQ2xpZW50LmlzQ29ubmVjdGVkKCkpIHtcbiAgICAgIC8vIOa4heeQhuWGheWtmOWtmOWCqOS4reeahOefremTvuaOpVxuICAgICAgY29uc3QgbWVtb3J5U3RvcmUgPSByZWRpc0NsaWVudC5tZW1vcnlTdG9yZTtcbiAgICAgIGlmIChtZW1vcnlTdG9yZSkge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXldIG9mIG1lbW9yeVN0b3JlKSB7XG4gICAgICAgICAgc2Nhbm5lZENvdW50Kys7XG4gICAgICAgICAgaWYgKGtleS5zdGFydHNXaXRoKCdzaG9ydDonKSkge1xuICAgICAgICAgICAgbWVtb3J5U3RvcmUuZGVsZXRlKGtleSk7XG4gICAgICAgICAgICBkZWxldGVkQ291bnQrKztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coYOWGheWtmOWtmOWCqOa4heeQhuWujOaIkDog5omr5o+PICR7c2Nhbm5lZENvdW50fSDkuKrplK7vvIzliKDpmaQgJHtkZWxldGVkQ291bnR9IOS4quefremTvuaOpWApO1xuICAgICAgXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICBtZXNzYWdlOiAn5riF55CG5a6M5oiQ77yI5YaF5a2Y5a2Y5YKo77yJJyxcbiAgICAgICAgc2Nhbm5lZENvdW50LFxuICAgICAgICBkZWxldGVkQ291bnQsXG4gICAgICAgIGVudmlyb25tZW50OiAnZGV2ZWxvcG1lbnQnXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyDlpoLmnpzkvb/nlKjnmoTmmK8gUmVkaXNcbiAgICBjb25zdCByZWRpcyA9IHJlZGlzQ2xpZW50LmdldENsaWVudCgpO1xuICAgIGlmICghcmVkaXMpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcjogJ1JlZGlzIOWuouaIt+err+acquWIneWni+WMlidcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIOS9v+eUqCBTQ0FOIOWRveS7pOafpeaJvuaJgOaciSBzaG9ydDoqIOmUrlxuICAgIGxldCBjdXJzb3IgPSAwO1xuICAgIGNvbnN0IGtleXNUb0RlbGV0ZSA9IFtdO1xuICAgIFxuICAgIGRvIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIOazqOaEj++8mlVwc3Rhc2ggUmVkaXMg55qEIHNjYW4g5pa55rOV5Y+v6IO95pyJ5LiN5ZCM55qE5Y+C5pWw5qC85byPXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlZGlzLnNjYW4oY3Vyc29yLCB7IG1hdGNoOiAnc2hvcnQ6KicsIGNvdW50OiAxMDAgfSk7XG4gICAgICAgIFxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShyZXN1bHQpICYmIHJlc3VsdC5sZW5ndGggPj0gMikge1xuICAgICAgICAgIGN1cnNvciA9IHBhcnNlSW50KHJlc3VsdFswXSk7XG4gICAgICAgICAgY29uc3Qga2V5cyA9IHJlc3VsdFsxXTtcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShrZXlzKSkge1xuICAgICAgICAgICAga2V5c1RvRGVsZXRlLnB1c2goLi4ua2V5cyk7XG4gICAgICAgICAgICBzY2FubmVkQ291bnQgKz0ga2V5cy5sZW5ndGg7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIOWmguaenOi/lOWbnuagvOW8j+S4jeWQjO+8jOWwneivleWFtuS7luaWueW8j1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChzY2FuRXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignU0NBTiDlkb3ku6TmiafooYzlpLHotKU6Jywgc2NhbkVycm9yKTtcbiAgICAgICAgLy8g5aaC5p6cIFNDQU4g5LiN5pSv5oyB77yM5bCd6K+V5L2/55SoIEtFWVPvvIjms6jmhI/vvJpLRVlTIOWcqOeUn+S6p+eOr+Wig+S4reaAp+iDvei+g+W3ru+8iVxuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IGtleXMgPSBhd2FpdCByZWRpcy5rZXlzKCdzaG9ydDoqJyk7XG4gICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoa2V5cykpIHtcbiAgICAgICAgICAgIGtleXNUb0RlbGV0ZS5wdXNoKC4uLmtleXMpO1xuICAgICAgICAgICAgc2Nhbm5lZENvdW50ICs9IGtleXMubGVuZ3RoO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoa2V5c0Vycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignS0VZUyDlkb3ku6TkuZ/lpLHotKU6Jywga2V5c0Vycm9yKTtcbiAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICBlcnJvcjogJ+aXoOazleaJq+aPj+efremTvuaOpemUridcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9IHdoaWxlIChjdXJzb3IgIT09IDApO1xuXG4gICAgLy8g5om56YeP5Yig6Zmk5om+5Yiw55qE6ZSuXG4gICAgaWYgKGtleXNUb0RlbGV0ZS5sZW5ndGggPiAwKSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyDliIbmibnliKDpmaTvvIzpgb/lhY3kuIDmrKHliKDpmaTlpKrlpJpcbiAgICAgICAgY29uc3QgYmF0Y2hTaXplID0gNTA7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwga2V5c1RvRGVsZXRlLmxlbmd0aDsgaSArPSBiYXRjaFNpemUpIHtcbiAgICAgICAgICBjb25zdCBiYXRjaCA9IGtleXNUb0RlbGV0ZS5zbGljZShpLCBpICsgYmF0Y2hTaXplKTtcbiAgICAgICAgICBhd2FpdCByZWRpcy5kZWwoLi4uYmF0Y2gpO1xuICAgICAgICAgIGRlbGV0ZWRDb3VudCArPSBiYXRjaC5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGRlbGV0ZUVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ+aJuemHj+WIoOmZpOWksei0pTonLCBkZWxldGVFcnJvcik7XG4gICAgICAgIC8vIOWwneivlemAkOS4quWIoOmZpFxuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBrZXlzVG9EZWxldGUpIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgYXdhaXQgcmVkaXMuZGVsKGtleSk7XG4gICAgICAgICAgICBkZWxldGVkQ291bnQrKztcbiAgICAgICAgICB9IGNhdGNoIChzaW5nbGVEZWxldGVFcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihg5Yig6Zmk6ZSuICR7a2V5fSDlpLHotKU6YCwgc2luZ2xlRGVsZXRlRXJyb3IpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKGBSZWRpcyDmuIXnkIblrozmiJA6IOaJq+aPjyAke3NjYW5uZWRDb3VudH0g5Liq55+t6ZO+5o6l6ZSu77yM5Yig6ZmkICR7ZGVsZXRlZENvdW50fSDkuKpgKTtcblxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBtZXNzYWdlOiAn5riF55CG5a6M5oiQJyxcbiAgICAgIHNjYW5uZWRDb3VudCxcbiAgICAgIGRlbGV0ZWRDb3VudCxcbiAgICAgIGVudmlyb25tZW50OiAncHJvZHVjdGlvbidcbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+a4heeQhuefremTvuaOpeaVsOaNruWksei0pTonLCBlcnJvcik7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjogYOa4heeQhuWksei0pTogJHtlcnJvci5tZXNzYWdlfWBcbiAgICB9KTtcbiAgfVxufSJdLCJuYW1lcyI6WyJyZWRpc0NsaWVudCIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzZXRIZWFkZXIiLCJzdGF0dXMiLCJlbmQiLCJkZWxldGVkQ291bnQiLCJzY2FubmVkQ291bnQiLCJpc0Nvbm5lY3RlZCIsIm1lbW9yeVN0b3JlIiwia2V5Iiwic3RhcnRzV2l0aCIsImRlbGV0ZSIsImNvbnNvbGUiLCJsb2ciLCJqc29uIiwic3VjY2VzcyIsIm1lc3NhZ2UiLCJlbnZpcm9ubWVudCIsInJlZGlzIiwiZ2V0Q2xpZW50IiwiZXJyb3IiLCJjdXJzb3IiLCJrZXlzVG9EZWxldGUiLCJyZXN1bHQiLCJzY2FuIiwibWF0Y2giLCJjb3VudCIsIkFycmF5IiwiaXNBcnJheSIsImxlbmd0aCIsInBhcnNlSW50Iiwia2V5cyIsInB1c2giLCJzY2FuRXJyb3IiLCJrZXlzRXJyb3IiLCJiYXRjaFNpemUiLCJpIiwiYmF0Y2giLCJzbGljZSIsImRlbCIsImRlbGV0ZUVycm9yIiwic2luZ2xlRGVsZXRlRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/cleanup-short-links.js\n");

/***/ }),

/***/ "(api)/./src/redis_client.js":
/*!*****************************!*\
  !*** ./src/redis_client.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RedisClient: () => (/* binding */ RedisClient),\n/* harmony export */   redisClient: () => (/* binding */ redisClient)\n/* harmony export */ });\n/* harmony import */ var _upstash_redis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @upstash/redis */ \"@upstash/redis\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_upstash_redis__WEBPACK_IMPORTED_MODULE_0__]);\n_upstash_redis__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n/**\r\n * Redis客户端配置和连接管理\r\n * 使用Upstash Redis作为持久化存储\r\n */ class RedisClient {\n    constructor(){\n        // 从环境变量获取Upstash Redis配置\n        this.redisUrl = process.env.UPSTASH_REDIS_REST_URL;\n        this.redisToken = process.env.UPSTASH_REDIS_REST_TOKEN;\n        if (!this.redisUrl || !this.redisToken) {\n            console.warn(\"Upstash Redis配置未找到，将使用内存存储（仅用于开发环境）\");\n            this.redis = null;\n            this.memoryStore = new Map(); // 开发环境的内存存储\n        } else {\n            // 初始化Upstash Redis客户端\n            this.redis = new _upstash_redis__WEBPACK_IMPORTED_MODULE_0__.Redis({\n                url: this.redisUrl,\n                token: this.redisToken\n            });\n        }\n    }\n    /**\r\n   * 获取Redis客户端实例\r\n   * @returns {Redis|null} Redis客户端实例或null（如果未配置）\r\n   */ getClient() {\n        return this.redis;\n    }\n    /**\r\n   * 检查Redis连接是否可用\r\n   * @returns {boolean} 连接状态\r\n   */ isConnected() {\n        return this.redis !== null;\n    }\n    /**\r\n   * 设置键值对\r\n   * @param {string} key - 键\r\n   * @param {any} value - 值\r\n   * @param {number} [ttl] - 过期时间（秒）\r\n   * @returns {Promise<boolean>} 操作结果\r\n   */ async set(key, value, ttl = null) {\n        try {\n            if (this.redis) {\n                const serializedValue = JSON.stringify(value);\n                if (ttl) {\n                    await this.redis.setex(key, ttl, serializedValue);\n                } else {\n                    await this.redis.set(key, serializedValue);\n                }\n                return true;\n            } else {\n                // 使用内存存储作为后备\n                this.memoryStore.set(key, {\n                    value,\n                    timestamp: Date.now(),\n                    ttl\n                });\n                return true;\n            }\n        } catch (error) {\n            console.error(\"Redis设置失败:\", error);\n            return false;\n        }\n    }\n    /**\r\n   * 获取值\r\n   * @param {string} key - 键\r\n   * @returns {Promise<any|null>} 值或null\r\n   */ async get(key) {\n        try {\n            if (this.redis) {\n                const value = await this.redis.get(key);\n                if (!value) return null;\n                // 安全的 JSON 解析\n                try {\n                    // 如果值已经是对象，直接返回\n                    if (typeof value === \"object\") {\n                        return value;\n                    }\n                    // 如果是字符串，尝试解析\n                    return JSON.parse(value);\n                } catch (parseError) {\n                    console.error(`JSON解析失败，key: ${key}, value:`, value, parseError);\n                    // 如果解析失败，删除无效数据\n                    await this.del(key);\n                    return null;\n                }\n            } else {\n                // 使用内存存储作为后备\n                const item = this.memoryStore.get(key);\n                if (!item) return null;\n                // 检查是否过期\n                if (item.ttl && Date.now() - item.timestamp > item.ttl * 1000) {\n                    this.memoryStore.delete(key);\n                    return null;\n                }\n                return item.value;\n            }\n        } catch (error) {\n            console.error(\"Redis获取失败:\", error);\n            return null;\n        }\n    }\n    /**\r\n   * 删除键\r\n   * @param {string} key - 键\r\n   * @returns {Promise<boolean>} 操作结果\r\n   */ async del(key) {\n        try {\n            if (this.redis) {\n                await this.redis.del(key);\n                return true;\n            } else {\n                // 使用内存存储作为后备\n                return this.memoryStore.delete(key);\n            }\n        } catch (error) {\n            console.error(\"Redis删除失败:\", error);\n            return false;\n        }\n    }\n    /**\r\n   * 向列表添加元素\r\n   * @param {string} key - 列表键\r\n   * @param {any} value - 要添加的值\r\n   * @returns {Promise<boolean>} 操作结果\r\n   */ async lpush(key, value) {\n        try {\n            if (this.redis) {\n                await this.redis.lpush(key, JSON.stringify(value));\n                return true;\n            } else {\n                // 使用内存存储作为后备\n                const list = this.memoryStore.get(key)?.value || [];\n                list.unshift(value);\n                this.memoryStore.set(key, {\n                    value: list,\n                    timestamp: Date.now()\n                });\n                return true;\n            }\n        } catch (error) {\n            console.error(\"Redis列表添加失败:\", error);\n            return false;\n        }\n    }\n    /**\r\n   * 获取列表所有元素\r\n   * @param {string} key - 列表键\r\n   * @returns {Promise<Array>} 列表元素\r\n   */ async lrange(key, start = 0, end = -1) {\n        try {\n            if (this.redis) {\n                const items = await this.redis.lrange(key, start, end);\n                return items.map((item)=>{\n                    try {\n                        // 如果item已经是对象，直接返回\n                        if (typeof item === \"object\" && item !== null) {\n                            return item;\n                        }\n                        // 如果是字符串，尝试解析JSON\n                        if (typeof item === \"string\") {\n                            return JSON.parse(item);\n                        }\n                        // 其他情况直接返回\n                        return item;\n                    } catch (parseError) {\n                        console.warn(`JSON解析失败，返回原始值: ${item}`, parseError);\n                        return item;\n                    }\n                });\n            } else {\n                // 使用内存存储作为后备\n                const list = this.memoryStore.get(key)?.value || [];\n                if (end === -1) end = list.length - 1;\n                return list.slice(start, end + 1);\n            }\n        } catch (error) {\n            console.error(\"Redis列表获取失败:\", error);\n            return [];\n        }\n    }\n    /**\r\n   * 从列表中移除元素\r\n   * @param {string} key - 列表键\r\n   * @param {any} value - 要移除的值\r\n   * @returns {Promise<boolean>} 操作结果\r\n   */ async lrem(key, value) {\n        try {\n            if (this.redis) {\n                await this.redis.lrem(key, 0, JSON.stringify(value));\n                return true;\n            } else {\n                // 使用内存存储作为后备\n                const list = this.memoryStore.get(key)?.value || [];\n                const index = list.findIndex((item)=>JSON.stringify(item) === JSON.stringify(value));\n                if (index !== -1) {\n                    list.splice(index, 1);\n                    this.memoryStore.set(key, {\n                        value: list,\n                        timestamp: Date.now()\n                    });\n                }\n                return true;\n            }\n        } catch (error) {\n            console.error(\"Redis列表移除失败:\", error);\n            return false;\n        }\n    }\n}\n// 创建单例实例\nconst redisClient = new RedisClient();\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/redis_client.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcleanup-short-links&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Ccleanup-short-links.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();